# ===================================
# Spring Boot Dashboard Backend Configuration
# ===================================

# 서버 설정
server.port=8080
server.servlet.context-path=/

# 애플리케이션 정보
spring.application.name=dashboard-backend

# ===================================
# PostgreSQL 데이터베이스 설정 (메인 DB)
# ===================================
spring.datasource.url=jdbc:postgresql://0.tcp.jp.ngrok.io:10514/manufacturing_dashboard
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=1234

# 커넥션 풀 설정
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# ===================================
# JPA/Hibernate 설정 (PostgreSQL용)
# ===================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# ===================================
# InfluxDB 3.x 설정 (시계열 데이터용) - Spring Boot 자동 인식
# ===================================
# 기본 연결 설정
influxdb.url=https://0461a5c89393.ngrok-free.app
influxdb.token=apiv3_cEbVg1AZ9vV8n6ldeFVBf_ZocFlxa170VAQ4Aq2uUHVUuE63fvdu5VSVhSiQvvPlCUVBSx4TD4b9fl_G334ISw
influxdb.database=factory

# 타임아웃 설정
spring.influxdb.connection-timeout=30s
spring.influxdb.read-timeout=60s
spring.influxdb.write-timeout=30s

# 압축 설정
spring.influxdb.compression-enabled=true

# ===================================
# JSON 설정
# ===================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=Asia/Seoul
spring.jackson.serialization.write-durations-as-timestamps=false


# ===================================
# 로그 설정
# ===================================
# 전체 로그 레벨을 WARN으로 설정하여 불필요한 로그 제거
logging.root.level=WARN

# MQTT 관련 로그만 INFO 레벨로 설정
logging.level.com.u1mobis.dashboard_backend.mqtt=INFO
logging.level.com.u1mobis.dashboard_backend.service.KPICalculationService=INFO

# SQL 로그 끄기
spring.jpa.show-sql=false
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# ===================================
# 관리 엔드포인트 설정
# ===================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always